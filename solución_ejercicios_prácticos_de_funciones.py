# -*- coding: utf-8 -*-
"""Solución Ejercicios Prácticos de Funciones.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OaGf7hiVAzRlzh6RKsJTwTIZze7X4d9t
"""

#EJERCICIO 1
def es_primo(numero):
  if numero <= 2:
    return False

  for i in range(2, numero):
    if numero % i == 0:
      return False

  return True

def factorial(numero):
  factorial = 1
  for i in range(1, numero+1):
    factorial = factorial * i

  return factorial

def es_polindrome(frase):
  if frase == frase[::-1]:
    return True
  return False

menu = True
opcion = 0

while menu:
  print("1: Número Primo")
  print("2: Factorial")
  print("3: Políndrome")
  print("4: Salir")

  try:
    opcion = int(input("Ingrese la opción de menú "))
  except:
    print("Tipo de dato ingresado no válido")
    continue

  if opcion < 1 or opcion >4:
    print("Opción ingresada no existe")
    continue

  if opcion == 1:
    num = int(input("Ingrese el número para saber si es o no primo "))
    if es_primo(num):
      print(f"El número {num} es primo")
    else:
      print(f"El número {num} NO es primo")

  if opcion == 2:
    num = int(input("Ingrese el número para saber su factorial "))
    fact = factorial(num)
    print(f"El factorial de {num} es {fact}")

  if opcion == 3:
    frase = input("Ingrese la frase para saber si es o no políndrome ")
    if es_polindrome(frase):
      print(f"La frase {frase} es políndrome")
    else:
      print(f"La frase {frase} NO es políndrome")

  if opcion == 4:
    print("Adios")
    menu = False

#EJERCICIO 2
def fibonacci(limite):
  prev = 0
  act = 1
  print(act)
  for i in range(1,limite):
    tmp = act
    act = prev + act
    prev = tmp
    print(act)

numero = int(input("Indique el número para calcular su fibonacci "))
fibonacci(numero)
# 1-1-2-3-5-8-13-21-34-55

#EJERCICIO 3
def verificar_dv(run, p_dv):
  sum = 0
  factor = 2
  for i in str(run)[::-1]:
    if factor > 7:
      factor = 2

    parcial = int(i) * factor
    # print(f"{i} x {factor} = {parcial}")
    sum = sum + parcial
    factor = factor + 1

  resto = sum % 11
  dv = 11 - resto
  if dv == 11:
    dv = 0
  if dv == 10:
    dv = 'K'

  if str(dv).lower() == str(p_dv).lower():
    return True

  return False

rut = input("ingrese el rut que desea validar sin puntos, sin guión y con digito verificador. Ej si su rut es 123-4 debe ingresar 1234 ")
run = rut[:len(rut)-1]
dv = rut[-1]
if verificar_dv(run, dv):
  print(f"El dv {dv} es válido para el run {run} del rut {rut}")
else:
  print(f"El dv {dv} NO es válido para el run {run} del rut {rut}")